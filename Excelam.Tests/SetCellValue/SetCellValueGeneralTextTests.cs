using Excelam.System;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Excelam.Tests.SetCellValue;

[TestClass]
public class SetCellValueGeneralTextTests
{
    /// <summary>
    /// Start from an empty excel file.
    /// set cell values, test all formats.
    /// </summary>
    [TestMethod]
    public void SetCellValuesEmpty()
    {
        string fileName = @"Files\SetCellValues\SetCellValuesGeneralTextEmpty.xlsx";

        ExcelApi excelApi = new ExcelApi();
        ExcelWorkbook workbook;
        ExcelError error;
        bool res = excelApi.ExcelFileApi.OpenExcelFile(fileName, out workbook, out error);
        Assert.IsTrue(res);

        // get the first sheet
        var sheet = excelApi.ExcelSheetApi.GetSheet(workbook, 0);
        Assert.IsNotNull(sheet);

        //--B1 set 'bonjour' - general
        res = excelApi.ExcelCellValueApi.SetCellValueGeneral(sheet, "B1", "bonjour");
        Assert.IsTrue(res);

        // check
        string cellVal = excelApi.ExcelCellValueApi.GetCellValueAsString(sheet, "B1");
        Assert.AreEqual("bonjour", cellVal);

        ////--B3: set 'le texte' - Text
        //res = excelApi.ExcelCellValueApi.SetCellValueText(sheet, "B3", "le texte");
        //Assert.IsTrue(res);

        //// check
        //cellVal = excelApi.ExcelCellValueApi.GetCellValueAsString(sheet, "B3");
        //Assert.AreEqual("le texte", cellVal);

        //--close the file
        res = excelApi.ExcelFileApi.CloseExcelFile(workbook, out error);
        Assert.IsTrue(res);
    }

    /// <summary>
    /// reuse the excel file SetCellValuesEmpty.xlsx
    /// generated by the previous test.
    /// </summary>
    [TestMethod]
    public void SetCellValuesSameFormatNoStyle()
    {
        string fileName = @"Files\SetCellValues\SetCellValuesGeneralTextSameFormatNoStyle.xlsx";

        ExcelApi excelApi = new ExcelApi();
        ExcelWorkbook workbook;
        ExcelError error;
        bool res = excelApi.ExcelFileApi.OpenExcelFile(fileName, out workbook, out error);
        Assert.IsTrue(res);

        // get the first sheet
        var sheet = excelApi.ExcelSheetApi.GetSheet(workbook, 0);
        Assert.IsNotNull(sheet);

        //--B1 set 'salute' - general
        res = excelApi.ExcelCellValueApi.SetCellValueGeneral(sheet, "B1", "salute");
        Assert.IsTrue(res);

        // check
        string cellVal = excelApi.ExcelCellValueApi.GetCellValueAsString(sheet, "B1");
        Assert.AreEqual("salute", cellVal);

        ////--B3: set 'another text' - Text
        //res = excelApi.ExcelCellValueApi.SetCellValueText(sheet, "B3", "another text");
        //Assert.IsTrue(res);

        //// check
        //cellVal = excelApi.ExcelCellValueApi.GetCellValueAsString(sheet, "B3");
        //Assert.AreEqual("le texte", cellVal);

        //--close the file
        res = excelApi.ExcelFileApi.CloseExcelFile(workbook, out error);
        Assert.IsTrue(res);
    }

    /// <summary>
    /// reuse the excel file SetCellValuesEmpty.xlsx
    /// generated by the previous test.
    /// </summary>
    [TestMethod]
    public void SetCellValuesSameFormatWithStyle()
    {
        string fileName = @"Files\SetCellValues\SetCellValuesGeneralTextSameFormatWithStyle.xlsx";

        ExcelApi excelApi = new ExcelApi();
        ExcelWorkbook workbook;
        ExcelError error;
        bool res = excelApi.ExcelFileApi.OpenExcelFile(fileName, out workbook, out error);
        Assert.IsTrue(res);

        // get the first sheet
        var sheet = excelApi.ExcelSheetApi.GetSheet(workbook, 0);
        Assert.IsNotNull(sheet);

        //--B1 set 'salute' - general
        res = excelApi.ExcelCellValueApi.SetCellValueGeneral(sheet, "B1", "salute");
        Assert.IsTrue(res);

        // check
        string cellVal = excelApi.ExcelCellValueApi.GetCellValueAsString(sheet, "B1");
        Assert.AreEqual("salute", cellVal);

        ////--B3: set 'another text' - Text
        //res = excelApi.ExcelCellValueApi.SetCellValueText(sheet, "B3", "another text");
        //Assert.IsTrue(res);

        //// check
        //cellVal = excelApi.ExcelCellValueApi.GetCellValueAsString(sheet, "B3");
        //Assert.AreEqual("le texte", cellVal);

        //--close the file
        res = excelApi.ExcelFileApi.CloseExcelFile(workbook, out error);
        Assert.IsTrue(res);
    }


    [TestMethod]
    public void SetCellValuesOtherFormatNoStyle()
    {
        string fileName = @"Files\SetCellValues\SetCellValuesGeneralTextOtherFormatNoStyle.xlsx";
        ExcelApi excelApi = new ExcelApi();
        ExcelWorkbook workbook;
        ExcelError error;
        bool res = excelApi.ExcelFileApi.OpenExcelFile(fileName, out workbook, out error);
        Assert.IsTrue(res);

        // get the first sheet
        var sheet = excelApi.ExcelSheetApi.GetSheet(workbook, 0);
        Assert.IsNotNull(sheet);

        //--B1 set 'salute' - general
        res = excelApi.ExcelCellValueApi.SetCellValueGeneral(sheet, "B1", "salute");
        Assert.IsTrue(res);

        // check
        string cellVal = excelApi.ExcelCellValueApi.GetCellValueAsString(sheet, "B1");
        Assert.AreEqual("salute", cellVal);

        ////--B3: set 'another text' - Text
        //res = excelApi.ExcelCellValueApi.SetCellValueText(sheet, "B3", "another text");
        //Assert.IsTrue(res);

        //// check
        //cellVal = excelApi.ExcelCellValueApi.GetCellValueAsString(sheet, "B3");
        //Assert.AreEqual("le texte", cellVal);

        //--close the file
        res = excelApi.ExcelFileApi.CloseExcelFile(workbook, out error);
        Assert.IsTrue(res);
    }

    [TestMethod]
    public void SetCellValuesOtherFormatWithStyle()
    {
        string fileName = @"Files\SetCellValues\SetCellValuesGeneralTextOtherFormatWithStyle.xlsx";
        ExcelApi excelApi = new ExcelApi();
        ExcelWorkbook workbook;
        ExcelError error;
        bool res = excelApi.ExcelFileApi.OpenExcelFile(fileName, out workbook, out error);
        Assert.IsTrue(res);

        // get the first sheet
        var sheet = excelApi.ExcelSheetApi.GetSheet(workbook, 0);
        Assert.IsNotNull(sheet);

        //--B1 set 'salute' - general
        res = excelApi.ExcelCellValueApi.SetCellValueGeneral(sheet, "B1", "salute");
        Assert.IsTrue(res);

        // check
        string cellVal = excelApi.ExcelCellValueApi.GetCellValueAsString(sheet, "B1");
        Assert.AreEqual("salute", cellVal);

        ////--B3: set 'another text' - Text
        //res = excelApi.ExcelCellValueApi.SetCellValueText(sheet, "B3", "another text");
        //Assert.IsTrue(res);

        //// check
        //cellVal = excelApi.ExcelCellValueApi.GetCellValueAsString(sheet, "B3");
        //Assert.AreEqual("le texte", cellVal);

        //--close the file
        res = excelApi.ExcelFileApi.CloseExcelFile(workbook, out error);
        Assert.IsTrue(res);
    }
}
